# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    googleGeocodingApiKey: '%env(GOOGLE_GEOCODING_API_KEY)%'
    googleGeocodingApiUrl: '%env(GOOGLE_GEOCODING_API_URL)%'
    heremapsGeocodingApiKey: '%env(HEREMAPS_GEOCODING_API_KEY)%'
    heremapsGeocodingApiUrl: '%env(HEREMAPS_GEOCODING_API_URL)%'
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    _instanceof:
        App\Service\Geocode\Actions\GeocodeActionsInterface:
            tags: ['app.geocode_actions']

        App\Service\Geocode\ApiResponseParser\ParserInterface:
            tags: ['app.parsers']

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\Service\Geocode\ApiHandler\GoogleHandler:
        arguments:
            $key: '%googleGeocodingApiKey%'
            $apiUrl: '%googleGeocodingApiUrl%'

    App\Service\Geocode\ApiHandler\HereMapsHandler:
        arguments:
            $key: '%heremapsGeocodingApiKey%'
            $apiUrl: '%heremapsGeocodingApiUrl%'

    App\Service\Geocode\Actions\HereMapsGeocoderService:
        arguments:
            $apiAdapter: '@App\Service\Geocode\ApiHandler\HereMapsHandler'

    App\Service\Geocode\Actions\GoogleGeocoderService:
        arguments:
            $apiAdapter: '@App\Service\Geocode\ApiHandler\GoogleHandler'

    App\Service\Geocode\GeocodeService:
        arguments:
            $geocodeActions: !tagged_iterator app.geocode_actions

    App\Factory\GeocodeApiResponseParserFactory:
        arguments:
            $parsers: !tagged_iterator app.parsers
